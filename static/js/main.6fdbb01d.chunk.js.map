{"version":3,"sources":["contents/Intro.js","contents/Home.js","contents/MenuTabs.js","contents/Skills.js","contents/Pages.js","serviceWorker.js","index.js"],"names":["Container","Keyframes","Spring","wiggle","next","a","from","x","color","to","config","tension","friction","y","visibility","Home","Jumbotron","MenuTabs","Navbar","bg","sticky","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","activeKey","className","Link","Skills","props","json","require","skills","key","push","type","skill","sentence","state","CardColumns","this","React","Component","Skill","Card","style","width","Header","Body","Title","Text","home","Boolean","window","location","hostname","match","ReactDOM","render","styles","opacity","position","top","bottom","left","right","margin","backgroundColor","zIndex","xmlns","strokeDashoffset","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","d","atEnter","atLeave","atActive","val","spring","stiffness","damping","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6fdbb01d.chunk.js","sourcesContent":["// import delay from \"delay\";\nimport React from 'react';\nimport { Keyframes } from 'react-spring/renderprops';\n\nconst loadingStyle = (opacity, visibility) => ({\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  margin: 'auto',\n  opacity: opacity,\n  visibility: visibility,\n  backgroundColor: 'black',\n  zIndex: 3000,\n});\n\nconst svgStyle = () => ({\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  margin: 'auto',\n});\n\nconst pathStyle = (fill) => ({\n  fill: fill,\n  stroke: '#020070',\n  strokeWidth: 0.5,\n  strokeLinecap: 'square',\n  strokeDasharray: 200,\n});\n\nconst Container = Keyframes.Spring({\n  wiggle: async (next) => {\n    await next({\n      from: { x: 200, color: 'black' },\n      to: { x: 0, color: '#311b92' },\n      config: { tension: 150, friction: 70 },\n    });\n    await next({\n      from: { x: 0, color: '#311b92' },\n      to: { x: 201, color: 'black' },\n      config: { tension: 170, friction: 70 },\n    });\n    await next({\n      from: { y: 1 },\n      to: { y: 0 },\n      config: { tension: 150, friction: 30 },\n    });\n    await next({\n      visibility: 'hidden',\n    });\n  },\n});\n\nexport default function Intro() {\n  return (\n    <Container state=\"wiggle\">\n      {(styles) => (\n        <div style={loadingStyle(styles.y, styles.visibility)}>\n          <svg\n            style={svgStyle()}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            strokeDashoffset={styles.x}\n            width=\"90%\"\n            height=\"90%\"\n            viewBox=\"0 0 100 30\"\n          >\n            <path\n              style={pathStyle(styles.color)}\n              d=\"M93.92 12.23q.64-.17 1.16-.64.52-.48.9-1.22.38-.75.59-1.74.2-1.01.2-2.2 0-.81-.14-1.5-.15-.73-.41-1.24-.26-.53-.63-.83-.36-.3-.8-.3-.32 0-.67.23-.33.24-.65.66-.31.4-.58.97-.26.56-.43 1.18l-.33-.28q.17-1.1.47-2.07.3-.97.7-1.69.43-.73.96-1.14.52-.42 1.17-.42.61 0 1.14.4.53.39.93 1.09.4.68.63 1.61.23.94.23 2.04 0 .57-.13 1.27-.14.7-.37 1.41-.23.72-.54 1.42-.3.67-.64 1.2.47.32.88.98.42.64.73 1.52.31.89.49 1.91.18 1.01.18 2.02 0 2.17-.38 3.79-.39 1.61-1.07 2.68-.67 1.06-1.6 1.6-.92.53-1.99.53-.45 0-.81-.15-.36-.15-.61-.42-.25-.26-.39-.63-.13-.36-.13-.8 0-.4.08-.65.1-.27.23-.42.13-.17.29-.22.16-.07.3-.07.3 0 .51.12.22.13.39.34.17.18.3.4l.31.42q.16.19.35.31.2.13.48.13.58 0 1.02-.4.45-.42.75-1.12.3-.72.45-1.62.16-.92.16-1.9 0-1.27-.23-2.36-.22-1.08-.67-1.87-.45-.8-1.15-1.25-.7-.46-1.63-.46zm-7.68 13.24q-.92 0-1.69-.96-.75-.95-1.3-2.66-.53-1.7-.82-4.08-.3-2.37-.3-5.17 0-2.6.3-4.89.29-2.3.83-4 .54-1.73 1.3-2.72.76-.99 1.68-.99.92 0 1.67 1 .76.98 1.3 2.7.54 1.72.83 4.01.3 2.3.3 4.89 0 2.8-.3 5.17t-.84 4.08q-.53 1.7-1.29 2.66-.75.96-1.67.96zm0-1.22q.56 0 .98-.95.42-.95.7-2.57.27-1.62.4-3.71.15-2.11.15-4.42 0-2.32-.15-4.4-.13-2.07-.4-3.61-.28-1.56-.7-2.48-.42-.92-.98-.92-.57 0-.99.92-.42.92-.7 2.48-.27 1.54-.4 3.62Q84 10.28 84 12.6q0 2.3.13 4.42.14 2.1.41 3.7.28 1.63.7 2.58.42.95.99.95zM70.77.55h1.05l7.28 17.81h.08V.56h.83v24.9h-.44L71.69 5.68h-.07V24.9h-.85zM64 0l5.22 24.9h-1.9l-1.69-8.12h-4.77l-1.75 8.12h-.94L63.53 0zm-2.81 15.2h4.1l-2.02-9.64zm-8 8.72q.42 0 .82-.23.4-.26.72-.74.32-.5.51-1.2.2-.7.2-1.64 0-1.12-.27-1.99-.26-.88-.7-1.6-.42-.73-.97-1.37-.55-.65-1.12-1.29-.56-.64-1.12-1.34-.54-.71-.97-1.58-.43-.88-.7-1.94-.25-1.09-.25-2.48 0-1.4.23-2.6.24-1.18.7-2.05Q50.73 1 51.4.5q.68-.5 1.55-.5.8 0 1.41.37.62.36 1.1 1.08.46.72.79 1.76.32 1.05.52 2.43l-.95.95q-.17-1.12-.43-2.04-.26-.93-.62-1.6-.36-.65-.84-1-.46-.37-1.06-.37-.53 0-.92.33-.4.31-.66.84-.26.52-.4 1.18-.12.64-.12 1.32 0 .96.27 1.76.26.8.7 1.5.45.7 1.01 1.37l1.16 1.34q.59.68 1.15 1.41.57.74 1.01 1.62.44.86.71 1.9.27 1.04.27 2.32 0 1.45-.25 2.74-.25 1.26-.75 2.22-.5.93-1.25 1.49-.75.55-1.74.55-.8 0-1.43-.39-.63-.38-1.11-1.12-.48-.73-.82-1.78-.35-1.07-.57-2.42l1-.9q.18 1.19.47 2.13.3.93.7 1.6.39.64.87.99.48.34 1.03.34zM37.14.55H39v15.8q0 1.57.24 2.95.24 1.36.7 2.38.45 1.03 1.08 1.64.65.59 1.44.59.8 0 1.43-.6.64-.6 1.08-1.63.45-1.02.69-2.38.24-1.38.24-2.94V.56h.82v15.8q0 1.87-.27 3.52-.28 1.66-.88 2.9-.58 1.24-1.5 1.97-.93.72-2.22.72-1.14 0-2.03-.72-.88-.73-1.48-1.98t-.9-2.92q-.31-1.7-.31-3.6zm-10.56 0h3.86q1 0 1.75.48.75.46 1.25 1.3.5.85.76 2.02.26 1.16.26 2.54 0 1.13-.2 2.13-.2.99-.56 1.8-.35.78-.85 1.37-.5.57-1.1.9l4.04 11.8h-2.17l-3.86-11.43h-1.3V24.9h-1.88zm1.87 11.68h1.08q.63 0 1.16-.37.53-.37.92-1.03.4-.68.61-1.63.22-.96.22-2.15 0-1.1-.18-2.02-.16-.92-.48-1.56-.31-.66-.75-1.03-.43-.37-.94-.37h-1.64zM19.8 0l5.22 24.9h-1.9l-1.69-8.12h-4.77l-1.75 8.12h-.94L19.33 0zm-2.81 15.2h4.1l-2.02-9.64zM0 .55h1.91l4.32 18.67h.1L10.56.55h1.88V24.9h-1.88V4.94h-.05L5.95 24.9h-.39L.96 5.1H.83v19.8H0z\"\n            />\n          </svg>\n        </div>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nexport default function Home() {\n  return (\n    <Jumbotron>\n      <h1>Welcome to marusan03&#39;s Portfolio!!</h1>\n      <p>React+bootstrapで作りました！</p>\n    </Jumbotron>\n  );\n}\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nexport default function MenuTabs() {\n  return (\n    <Navbar bg=\"dark\" sticky=\"Top\" variant=\"dark\">\n      <LinkContainer to=\"/portfolio\">\n        <Navbar.Brand>Menu</Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav activeKey=\"/portfolio\" className=\"mr-auto\">\n          <LinkContainer to=\"/portfolio\">\n            <Nav.Link>Home</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/portfolio/skills\">\n            <Nav.Link>Skills</Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nexport default class Skills extends React.Component {\n  constructor(props) {\n    super(props);\n    var json = require('./data/skills.json');\n    const skills = [];\n    for (var key in json['skills']) {\n      skills.push(\n        <Skill\n          key={key}\n          type={json['skills'][key]['type']}\n          skill={json['skills'][key]['skill']}\n          sentence={json['skills'][key]['sentence']}\n        />\n      );\n    }\n    this.state = { skills: skills };\n  }\n\n  render() {\n    return <CardColumns>{this.state.skills}</CardColumns>;\n  }\n}\n\nconst Skill = (props) => {\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Header>{props.type}</Card.Header>\n      <Card.Body>\n        <Card.Title>{props.skill}</Card.Title>\n        <Card.Text>{props.sentence}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nSkill.propTypes = {\n  type: PropTypes.string.isRequired,\n  skill: PropTypes.string.isRequired,\n  sentence: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { AnimatedSwitch, spring } from 'react-router-transition';\nimport Home from './Home';\nimport MenuTabs from './MenuTabs';\nimport Skills from './Skills';\n\nconst home = () => <Home />;\nconst skills = () => <Skills />;\n\nfunction bounce(val) {\n  return spring(val, {\n    stiffness: 330,\n    damping: 22,\n  });\n}\n\nexport default function Pages() {\n  return (\n    <BrowserRouter>\n      <MenuTabs />\n      <Container>\n        <AnimatedSwitch\n          atEnter={{ opacity: 0 }}\n          atLeave={{ opacity: 1 }}\n          atActive={{ opacity: bounce(1) }}\n          className=\"switch-wrapper\"\n        >\n          <Route exact path=\"/portfolio\" component={home} />\n          <Route path=\"/portfolio/skills\" component={skills} />\n        </AnimatedSwitch>\n      </Container>\n    </BrowserRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Intro from './contents/Intro';\nimport Pages from './contents/Pages';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <main>\n    <Intro />\n    <Pages />\n  </main>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}